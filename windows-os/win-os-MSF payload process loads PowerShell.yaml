title: Encoded PowerShell payload via process execution
description: Detects scenarios where an attacker deployed an encoded PowerShell payload via a process execution.
references:
- https://github.com/mdecrevoisier/EVTX-to-MITRE-Attack/tree/master/TA0002-Execution/T1059.001-PowerShell
- https://www.offensive-security.com/metasploit-unleashed/psexec-pass-hash/
tags:
- attack.execution  
- attack.t1059.001
- attack.defense-evasion
- attack.t1564.003
author: mdecrevoisier
status: experimental
logsource:
  product: windows
  service: process_creation
detection:
  selection:
    EventID: 4688
    NewProcessName|endswith:
      - \powershell.exe
      - \cmd.exe
      - \pwsh.exe
    CommandLine|contains|all:
      - powershell.exe
      - FromBase64String
      - hidden
      - '-nop'
      - '-noni'
  condition: selection
falsepositives:
  - none
level: high

#Payload sample:
#C:\Windows\system32\cmd.exe /b /c start /b /min powershell.exe -nop -w hidden -noni -c "if([IntPtr]::Size -eq 4){$b='powershell.exe'}else{$b=$env:windir+'\syswow64\WindowsPowerShell\v1.0\powershell.exe'};$s=New-Object System.Diagnostics.ProcessStartInfo;$s.FileName=$b;$s.Arguments='-noni -nop -w hidden -c &([scriptblock]::create((New-Object System.IO.StreamReader(New-Object System.IO.Compression.GzipStream((New-Object System.IO.MemoryStream(,[System.Convert]::FromBase64String(''H4sIA3+DTnHlctdCgAA''))),[System.IO.Compression.CompressionMode]::Decompress))).ReadToEnd()))';$s.UseShellExecute=$false;$s.RedirectStandardOutput=$true;$s.WindowStyle='Hidden';$s.CreateNoWindow=$true;$p=[System.Diagnostics.Process]::Start($s);" 